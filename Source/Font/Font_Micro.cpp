// Copyright 2007 Peter Stegemann

#include "Font_Micro.h"

#include <avr/pgmspace.h>

const flash_uint8_t Font_Micro[] PROGMEM =
{
	// SPACE
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000,
	// !
	0b00000100,
	0b00000100,
	0b00000100,
	0b00000000,
	0b00000100,
	0b00000000,
	// "
	0b00000101,
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000,
	// #
	0b00000010,
	0b00000111,
	0b00000010,
	0b00000111,
	0b00000010,
	0b00000000,
	// $
	0b00000011,
	0b00000110,
	0b00000010,
	0b00000011,
	0b00000110,
	0b00000000,
	// %
	0b00000101,
	0b00000001,
	0b00000010,
	0b00000100,
	0b00000101,
	0b00000000,
	// &
	0b00000010,
	0b00000101,
	0b00000010,
	0b00000101,
	0b00000011,
	0b00000000,
	// '
	0b00000100,
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000,
	// (
	0b00000010,
	0b00000100,
	0b00000100,
	0b00000100,
	0b00000010,
	0b00000000,
	// )
	0b00000100,
	0b00000010,
	0b00000010,
	0b00000010,
	0b00000100,
	0b00000000,
	// *
	0b00000010,
	0b00000111,
	0b00000111,
	0b00000111,
	0b00000010,
	0b00000000,
	// +
	0b00000000,
	0b00000010,
	0b00000111,
	0b00000010,
	0b00000000,
	0b00000000,
	// ,
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000010,
	0b00000100,
	// -
	0b00000000,
	0b00000000,
	0b00000111,
	0b00000000,
	0b00000000,
	0b00000000,
	// .
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000100,
	0b00000000,
	// /
	0b00000001,
	0b00000001,
	0b00000010,
	0b00000100,
	0b00000100,
	0b00000000,
	// 0
	0b00000010,
	0b00000101,
	0b00000101,
	0b00000101,
	0b00000010,
	0b00000000,
	// 1
	0b00000010,
	0b00000110,
	0b00000010,
	0b00000010,
	0b00000111,
	0b00000000,
	// 2
	0b00000110,
	0b00000001,
	0b00000010,
	0b00000100,
	0b00000111,
	0b00000000,
	// 3
	0b00000110,
	0b00000001,
	0b00000010,
	0b00000001,
	0b00000111,
	0b00000000,
	// 4
	0b00000101,
	0b00000101,
	0b00000111,
	0b00000001,
	0b00000001,
	0b00000000,
	// 5
	0b00000111,
	0b00000100,
	0b00000110,
	0b00000001,
	0b00000111,
	0b00000000,
	// 6
	0b00000011,
	0b00000100,
	0b00000110,
	0b00000101,
	0b00000111,
	0b00000000,
	// 7
	0b00000111,
	0b00000001,
	0b00000010,
	0b00000010,
	0b00000010,
	0b00000000,
	// 8
	0b00000111,
	0b00000101,
	0b00000111,
	0b00000101,
	0b00000111,
	0b00000000,
	// 9
	0b00000111,
	0b00000101,
	0b00000011,
	0b00000001,
	0b00000110,
	0b00000000,
	// :
	0b00000000,
	0b00000100,
	0b00000000,
	0b00000100,
	0b00000000,
	0b00000000,
	// ;
	0b00000000,
	0b00000000,
	0b00000010,
	0b00000000,
	0b00000010,
	0b00000100,
	// <
	0b00000001,
	0b00000010,
	0b00000100,
	0b00000010,
	0b00000001,
	0b00000000,
	// =
	0b00000000,
	0b00000111,
	0b00000000,
	0b00000111,
	0b00000000,
	0b00000000,
	// >
	0b00000100,
	0b00000010,
	0b00000001,
	0b00000010,
	0b00000100,
	0b00000000,
	// ?
	0b00000110,
	0b00000001,
	0b00000010,
	0b00000000,
	0b00000010,
	0b00000000,
	// @
	0b00000110,
	0b00000001,
	0b00000011,
	0b00000101,
	0b00000111,
	0b00000000,
	// A
	0b00000010,
	0b00000101,
	0b00000111,
	0b00000101,
	0b00000101,
	0b00000000,
	// B
	0b00000110,
	0b00000101,
	0b00000110,
	0b00000101,
	0b00000110,
	0b00000000,
	// C
	0b00000011,
	0b00000100,
	0b00000100,
	0b00000100,
	0b00000011,
	0b00000000,
	// D
	0b00000110,
	0b00000101,
	0b00000101,
	0b00000101,
	0b00000110,
	0b00000000,
	// E
	0b00000111,
	0b00000100,
	0b00000110,
	0b00000100,
	0b00000111,
	0b00000000,
	// F
	0b00000111,
	0b00000100,
	0b00000110,
	0b00000100,
	0b00000100,
	0b00000000,
	// G
	0b00000011,
	0b00000100,
	0b00000101,
	0b00000101,
	0b00000011,
	0b00000000,
	// H
	0b00000101,
	0b00000101,
	0b00000111,
	0b00000101,
	0b00000101,
	0b00000000,
	// I
	0b00000111,
	0b00000010,
	0b00000010,
	0b00000010,
	0b00000111,
	0b00000000,
	// J
	0b00000111,
	0b00000001,
	0b00000001,
	0b00000001,
	0b00000110,
	0b00000000,
	// K
	0b00000101,
	0b00000101,
	0b00000110,
	0b00000101,
	0b00000101,
	0b00000000,
	// L
	0b00000100,
	0b00000100,
	0b00000100,
	0b00000100,
	0b00000111,
	0b00000000,
	// M
	0b00000101,
	0b00000111,
	0b00000101,
	0b00000101,
	0b00000101,
	0b00000000,
	// N
	0b00000101,
	0b00000111,
	0b00000111,
	0b00000101,
	0b00000101,
	0b00000000,
	// O
	0b00000010,
	0b00000101,
	0b00000101,
	0b00000101,
	0b00000010,
	0b00000000,
	// P
	0b00000110,
	0b00000101,
	0b00000110,
	0b00000100,
	0b00000100,
	0b00000000,
	// Q
	0b00000010,
	0b00000101,
	0b00000101,
	0b00000101,
	0b00000011,
	0b00000000,
	// R
	0b00000110,
	0b00000101,
	0b00000110,
	0b00000101,
	0b00000101,
	0b00000000,
	// S
	0b00000011,
	0b00000100,
	0b00000111,
	0b00000001,
	0b00000110,
	0b00000000,
	// T
	0b00000111,
	0b00000010,
	0b00000010,
	0b00000010,
	0b00000010,
	0b00000000,
	// U
	0b00000101,
	0b00000101,
	0b00000101,
	0b00000101,
	0b00000010,
	0b00000000,
	// V
	0b00000101,
	0b00000101,
	0b00000101,
	0b00000010,
	0b00000010,
	0b00000000,
	// W
	0b00000101,
	0b00000101,
	0b00000101,
	0b00000111,
	0b00000101,
	0b00000000,
	// X
	0b00000101,
	0b00000101,
	0b00000010,
	0b00000101,
	0b00000101,
	0b00000000,
	// Y
	0b00000101,
	0b00000101,
	0b00000010,
	0b00000010,
	0b00000010,
	0b00000000,
	// Z
	0b00000111,
	0b00000001,
	0b00000010,
	0b00000100,
	0b00000111,
	0b00000000,
	// [
	0b00000110,
	0b00000100,
	0b00000100,
	0b00000100,
	0b00000110,
	0b00000000,
	// Backslash
	0b00000100,
	0b00000100,
	0b00000010,
	0b00000001,
	0b00000001,
	0b00000000,
	// ]
	0b00000110,
	0b00000010,
	0b00000010,
	0b00000010,
	0b00000110,
	0b00000000,
	// ^
	0b00000010,
	0b00000101,
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000,
	// _
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000111,
	0b00000000,
	// `
	0b00000100,
	0b00000010,
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000,
	// a
	0b00000000,
	0b00000000,
	0b00000011,
	0b00000101,
	0b00000011,
	0b00000000,
	// b
	0b00000100,
	0b00000100,
	0b00000110,
	0b00000101,
	0b00000110,
	0b00000000,
	// c
	0b00000000,
	0b00000000,
	0b00000011,
	0b00000100,
	0b00000011,
	0b00000000,
	// d
	0b00000001,
	0b00000001,
	0b00000011,
	0b00000101,
	0b00000011,
	0b00000000,
	// e
	0b00000000,
	0b00000000,
	0b00000111,
	0b00000110,
	0b00000111,
	0b00000000,
	// f
	0b00000001,
	0b00000010,
	0b00000111,
	0b00000010,
	0b00000010,
	0b00000000,
	// g
	0b00000000,
	0b00000000,
	0b00000011,
	0b00000101,
	0b00000011,
	0b00000011,
	// h
	0b00000100,
	0b00000100,
	0b00000110,
	0b00000101,
	0b00000101,
	0b00000000,
	// i
	0b00000100,
	0b00000000,
	0b00000100,
	0b00000100,
	0b00000100,
	0b00000000,
	// j
	0b00000010,
	0b00000000,
	0b00000010,
	0b00000010,
	0b00000010,
	0b00000100,
	// k
	0b00000100,
	0b00000100,
	0b00000101,
	0b00000110,
	0b00000101,
	0b00000000,
	// l
	0b00000100,
	0b00000100,
	0b00000100,
	0b00000100,
	0b00000010,
	0b00000000,
	// m
	0b00000000,
	0b00000000,
	0b00000111,
	0b00000111,
	0b00000101,
	0b00000000,
	// n
	0b00000000,
	0b00000000,
	0b00000110,
	0b00000101,
	0b00000101,
	0b00000000,
	// o
	0b00000000,
	0b00000000,
	0b00000111,
	0b00000101,
	0b00000111,
	0b00000000,
	// p
	0b00000000,
	0b00000000,
	0b00000110,
	0b00000101,
	0b00000110,
	0b00000100,
	// q
	0b00000000,
	0b00000000,
	0b00000011,
	0b00000101,
	0b00000011,
	0b00000001,
	// r
	0b00000000,
	0b00000000,
	0b00000101,
	0b00000110,
	0b00000100,
	0b00000000,
	// s
	0b00000000,
	0b00000000,
	0b00000011,
	0b00000010,
	0b00000110,
	0b00000000,
	// t
	0b00000010,
	0b00000111,
	0b00000010,
	0b00000010,
	0b00000001,
	0b00000000,
	// u
	0b00000000,
	0b00000000,
	0b00000101,
	0b00000101,
	0b00000011,
	0b00000000,
	// v
	0b00000000,
	0b00000000,
	0b00000101,
	0b00000101,
	0b00000010,
	0b00000000,
	// w
	0b00000000,
	0b00000000,
	0b00000101,
	0b00000111,
	0b00000111,
	0b00000000,
	// x
	0b00000000,
	0b00000000,
	0b00000101,
	0b00000010,
	0b00000101,
	0b00000000,
	// y
	0b00000000,
	0b00000000,
	0b00000101,
	0b00000101,
	0b00000011,
	0b00000010,
	// z
	0b00000000,
	0b00000000,
	0b00000111,
	0b00000010,
	0b00000111,
	0b00000000,
	// {
	0b00000010,
	0b00000010,
	0b00000100,
	0b00000010,
	0b00000010,
	0b00000000,
	// |
	0b00000010,
	0b00000010,
	0b00000010,
	0b00000010,
	0b00000010,
	0b00000000,
	// }
	0b00000010,
	0b00000010,
	0b00000001,
	0b00000010,
	0b00000010,
	0b00000000,
	// ~
	0b00000110,
	0b00000011,
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000,
	// ae
	0b00000000,
	0b00000101,
	0b00000011,
	0b00000101,
	0b00000011,
	0b00000000,
	// oe
	0b00000000,
	0b00000101,
	0b00000111,
	0b00000101,
	0b00000111,
	0b00000000,
	// ue
	0b00000000,
	0b00000101,
	0b00000101,
	0b00000101,
	0b00000011,
	0b00000000,
	// Ae
	0b00000101,
	0b00000010,
	0b00000101,
	0b00000111,
	0b00000101,
	0b00000000,
	// Oe
	0b00000101,
	0b00000010,
	0b00000101,
	0b00000101,
	0b00000010,
	0b00000000,
	// Ue
	0b00000101,
	0b00000101,
	0b00000101,
	0b00000101,
	0b00000010,
	0b00000000,
	// ss
	0b00000010,
	0b00000101,
	0b00000110,
	0b00000101,
	0b00000110,
	0b00000100,
    // Exit
	0b00000010,
	0b00000111,
	0b00000010,
	0b00000010,
	0b00000010,
	0b00000000,
    // Backspace
	0b00000000,
	0b00000011,
	0b00000111,
	0b00000011,
	0b00000000,
	0b00000000,
    // Delete
	0b00000000,
	0b00000101,
	0b00000111,
	0b00000101,
	0b00000000,
	0b00000000,
    // Insert
	0b00000000,
	0b00000110,
	0b00000111,
	0b00000110,
	0b00000000,
	0b00000000,
    // Left
	0b00000000,
	0b00000100,
	0b00000111,
	0b00000100,
	0b00000000,
	0b00000000,
    // Right
	0b00000000,
	0b00000001,
	0b00000111,
	0b00000001,
	0b00000000,
	0b00000000
};

FONT_Micro::FONT_Micro( void)
          : FONT_Type( Font_Micro, 3, 6, 4, 7)
{
}
